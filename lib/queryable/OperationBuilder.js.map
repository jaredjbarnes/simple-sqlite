{"version":3,"sources":["../../src/queryable/OperationBuilder.js"],"names":["OperationBuilder","queryable","propertyName","factory","QueryFactory","value","valueNode","node","createIsInNode","propertyNode","createPropertyNode","type","Array","isArray","createValueNode","Queryable","createQueryableValueNode","Error","children","push","query","expression","createIsNotInNode","createEndsWithNode","createStartsWithNode","createContainsNode","createIsEqualToNode","createIsNotEqualToNode","createIsGreaterThanNode","createIsGreaterThanOrEqualToNode","createIsLessThanNode","createIsLessThanOrEqualToNode"],"mappings":"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","file":"OperationBuilder.js","sourcesContent":["import QueryFactory from \"../sqlite/factories/QueryFactory\";\nimport Queryable from \"./Queryable\";\n\nexport default class OperationBuilder {\n\n    constructor(queryable, propertyName) {\n        this.factory = new QueryFactory();\n        this.propertyName = propertyName;\n        this.queryable = queryable;\n    }\n\n    getQuery() {\n        return this.queryable;\n    }\n\n    isIn(value) {\n        let valueNode;\n        const node = this.factory.createIsInNode();\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        if (Array.isArray(value)) {\n            valueNode = this.factory.createValueNode(value);\n        } else if (value instanceof Queryable) {\n            valueNode = this.factory.createQueryableValueNode(value);\n        } else {\n            throw new Error(\"Invalid Argument: value needs to be an array or a queryable.\");\n        }\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isNotIn(value) {\n        if (!Array.isArray(value) && !(value instanceof Queryable)) {\n            throw new Error(\"Invalid Argument: value needs to be an array or a queryable.\");\n        }\n\n        const node = this.factory.createIsNotInNode();\n        const valueNode = this.factory.createQueryableValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    endsWith(value) {\n        const node = this.factory.createEndsWithNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    startsWith(value) {\n        const node = this.factory.createStartsWithNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    contains(value) {\n        const node = this.factory.createContainsNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isEqualTo(value) {\n        const node = this.factory.createIsEqualToNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isNotEqualTo(value) {\n        const node = this.factory.createIsNotEqualToNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isGreaterThan(value) {\n        const node = this.factory.createIsGreaterThanNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isGreaterThanOrEqualTo(value) {\n        const node = this.factory.createIsGreaterThanOrEqualToNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isLessThan(value) {\n        const node = this.factory.createIsLessThanNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isLessThanOrEqualTo(value) {\n        const node = this.factory.createIsLessThanOrEqualToNode();\n        const valueNode = this.factory.createValueNode(value);\n        const propertyNode = this.factory.createPropertyNode(this.queryable.type, this.propertyName);\n\n        node.children.push(propertyNode, valueNode);\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n}"]}