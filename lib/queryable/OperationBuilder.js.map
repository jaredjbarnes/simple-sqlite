{"version":3,"sources":["../../src/queryable/OperationBuilder.js"],"names":["OperationBuilder","constructor","queryable","propertyName","factory","NodeFactory","getQuery","isIn","value","Queryable","Array","isArray","Error","node","createOperatorNode","query","type","expression","children","push","isNotIn","endsWith","startsWith","contains","isEqualTo","isNotEqualTo","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo"],"mappings":"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","sourcesContent":["import NodeFactory from \"./NodeFactory\";\nimport Queryable from \"./Queryable\";\n\nexport default class OperationBuilder {\n\n    constructor(queryable, propertyName) {\n        this.factory = new NodeFactory();\n        this.propertyName = propertyName;\n        this.queryable = queryable;\n    }\n\n    getQuery() {\n        return this.queryable;\n    }\n\n    isIn(value) {\n        if (!(value instanceof Queryable) && !Array.isArray(value)) {\n            throw new Error(\"Invalid Argument: value needs to be an array or a queryable.\");\n        }\n\n        let node;\n\n        if (value instanceof Queryable) {\n            node = this.factory.createOperatorNode(\n                this.queryable.query.type,\n                this.propertyName,\n                \"isIn\",\n                value.query\n            );\n        } else {\n            node = this.factory.createOperatorNode(\n                this.queryable.query.type,\n                this.propertyName,\n                \"isIn\",\n                value\n            );\n        }\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isNotIn(value) {\n        if (!(value instanceof Queryable) && !Array.isArray(value)) {\n            throw new Error(\"Invalid Argument: value needs to be an array or a queryable.\");\n        }\n\n        let node;\n\n        if (value instanceof Queryable) {\n            node = this.factory.createOperatorNode(\n                this.queryable.query.type,\n                this.propertyName,\n                \"isNotIn\",\n                value.query\n            );\n        } else {\n            node = this.factory.createOperatorNode(\n                this.queryable.query.type,\n                this.propertyName,\n                \"isNotIn\",\n                value\n            );\n        }\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    endsWith(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"endsWith\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    startsWith(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"startsWith\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    contains(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"contains\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isEqualTo(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isEqualTo\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isNotEqualTo(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isNotEqualTo\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isGreaterThan(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isGreaterThan\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isGreaterThanOrEqualTo(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isGreaterThanOrEqualTo\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isLessThan(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isLessThan\",\n            value\n        );\n\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n    isLessThanOrEqualTo(value) {\n        const node = this.factory.createOperatorNode(\n            this.queryable.query.type,\n            this.propertyName,\n            \"isLessThanOrEqualTo\",\n            value\n        );\n        if (this.queryable.query.expression && Array.isArray(this.queryable.query.expression.children)) {\n            this.queryable.query.expression.children.push(node);\n        } else {\n            this.queryable.query.expression = node;\n        }\n\n        return this.queryable;\n    }\n\n}"],"file":"OperationBuilder.js"}