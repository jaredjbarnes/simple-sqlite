{"version":3,"sources":["../../src/utils/Validator.js"],"names":["PropertyValidator","value","type","Array","isArray","isNull","isObject","isNumber","isBoolean","isString","isFunction","Validator","obj","namespace","undefined","properties","split","property","length","getObject","slice"],"mappings":";;;;;;;;;;;;IAAMA,iB;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AACf,aAAKA,KAAL,GAAaA,KAAb;AACH;;;;qCAEYC,I,EAAM;AACf,mBAAO,KAAKD,KAAL,YAAsBC,IAA7B;AACH;;;kCAES;AACN,mBAAOC,MAAMC,OAAN,CAAc,KAAKH,KAAnB,CAAP;AACH;;;mCAEU;AACP,mBAAO,QAAO,KAAKA,KAAZ,MAAsB,QAAtB,IAAkC,KAAKA,KAAL,KAAe,IAAxD;AACH;;;mCAEU;AACP,mBAAO,OAAO,KAAKA,KAAZ,KAAsB,QAA7B;AACH;;;oCAEW;AACR,mBAAO,OAAO,KAAKA,KAAZ,KAAsB,SAA7B;AACH;;;mCAEU;AACP,mBAAO,OAAO,KAAKA,KAAZ,KAAsB,QAA7B;AACH;;;qCAEW;AACR,mBAAO,OAAO,KAAKA,KAAZ,KAAsB,UAA7B;AACH;;;0CAEiB;AACd,mBAAO,KAAKG,OAAL,MAAkB,KAAKC,MAAL,EAAzB;AACH;;;2CAEkB;AACf,mBAAO,KAAKC,QAAL,MAAmB,KAAKD,MAAL,EAA1B;AACH;;;2CAEkB;AACf,mBAAO,KAAKE,QAAL,MAAmB,KAAKF,MAAL,EAA1B;AACH;;;4CAEmB;AAChB,mBAAO,KAAKG,SAAL,MAAoB,KAAKH,MAAL,EAA3B;AACH;;;2CAEkB;AACf,mBAAO,KAAKI,QAAL,MAAmB,KAAKJ,MAAL,EAA1B;AACH;;;qCAEW;AACR,mBAAO,KAAKK,UAAL,MAAqB,KAAKL,MAAL,EAA5B;AACH;;;iCAEQ;AACL,mBAAO,KAAKJ,KAAL,KAAe,IAAtB;AACH;;;4CAEmB;AAChB,mBAAO,KAAKA,KAAL,IAAc,IAArB;AACH;;;sCAEa;AACV,mBAAO,OAAO,KAAKA,KAAZ,KAAsB,WAA7B;AACH;;;;;;IAIgBU,S;AACjB,uBAAYC,GAAZ,EAAiB;AAAA;;AACb,aAAKA,GAAL,GAAWA,GAAX;AACH;;;;kCAESA,G,EAAKC,S,EAAW;AACtB,gBAAIA,aAAa,IAAb,IAAqBD,OAAO,IAAhC,EAAsC;AAClC,uBAAOE,SAAP;AACH;;AAED,gBAAMC,aAAaF,UAAUG,KAAV,CAAgB,GAAhB,CAAnB;AACA,gBAAMC,WAAWF,WAAW,CAAX,CAAjB;;AAEA,gBAAI,OAAOH,IAAIK,QAAJ,CAAP,KAAyB,WAA7B,EAA0C;AACtC,oBAAIF,WAAWG,MAAX,GAAoB,CAAxB,EAA2B;AACvB,2BAAO,KAAKC,SAAL,CAAeP,IAAIK,QAAJ,CAAf,EAA8BF,WAAWK,KAAX,CAAiB,CAAjB,CAA9B,CAAP;AACH,iBAFD,MAEO;AACH,2BAAOR,IAAIK,QAAJ,CAAP;AACH;AACJ,aAND,MAMO;AACH,uBAAOH,SAAP;AACH;AACJ;;;iCAEQD,S,EAAW;AAChB,gBAAMZ,QAAQ,KAAKkB,SAAL,CAAe,KAAKP,GAApB,EAAyBC,SAAzB,CAAd;AACA,mBAAO,IAAIb,iBAAJ,CAAsBC,KAAtB,CAAP;AACH;;;iCAEQY,S,EAAW;AAChB,mBAAO,KAAKM,SAAL,CAAe,KAAKP,GAApB,EAAyBC,SAAzB,CAAP;AACH;;;;;;kBA/BgBF,S","file":"Validator.js","sourcesContent":["class PropertyValidator {\n    constructor(value) {\n        this.value = value;\n    }\n\n    isInstanceOf(type) {\n        return this.value instanceof type;\n    }\n\n    isArray() {\n        return Array.isArray(this.value);\n    }\n\n    isObject() {\n        return typeof this.value === \"object\" && this.value !== null;\n    }\n\n    isNumber() {\n        return typeof this.value === \"number\";\n    }\n\n    isBoolean() {\n        return typeof this.value === \"boolean\";\n    }\n\n    isString() {\n        return typeof this.value === \"string\";\n    }\n\n    isFunction(){\n        return typeof this.value === \"function\";\n    }\n\n    isNullableArray() {\n        return this.isArray() || this.isNull();\n    }\n\n    isNullableObject() {\n        return this.isObject() || this.isNull();\n    }\n\n    isNullableNumber() {\n        return this.isNumber() || this.isNull();\n    }\n\n    isNullableBoolean() {\n        return this.isBoolean() || this.isNull();\n    }\n\n    isNullableString() {\n        return this.isString() || this.isNull();\n    }\n\n    isFunction(){\n        return this.isFunction() || this.isNull();\n    }\n\n    isNull() {\n        return this.value === null;\n    }\n\n    isNullOrUndefined() {\n        return this.value == null;\n    }\n\n    isUndefined() {\n        return typeof this.value === \"undefined\";\n    }\n\n}\n\nexport default class Validator {\n    constructor(obj) {\n        this.obj = obj;\n    }\n\n    getObject(obj, namespace) {\n        if (namespace == null || obj == null) {\n            return undefined;\n        }\n\n        const properties = namespace.split(\".\");\n        const property = properties[0];\n\n        if (typeof obj[property] !== \"undefined\") {\n            if (properties.length > 1) {\n                return this.getObject(obj[property], properties.slice(1));\n            } else {\n                return obj[property];\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    validate(namespace) {\n        const value = this.getObject(this.obj, namespace);\n        return new PropertyValidator(value);\n    }\n\n    getValue(namespace) {\n        return this.getObject(this.obj, namespace);\n    }\n}"]}