{"version":3,"sources":["../../src/tests/CountStatementCreator.js"],"names":["assert","exports","queryable","Queryable","type","column","isEqualTo","countStatementCreator","CountStatementCreator","createStatement","sql","expected","equal"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACA;;;;;;;;AAGAC,QAAQ,kCAAR,IAA8C,YAAM;AAChD,QAAMC,YAAY,IAAIC,mBAAJ,CAAc,EAAEC,MAAM,OAAR,EAAd,EAAiCC,MAAjC,CAAwC,YAAxC,EAAsDC,SAAtD,CAAgE,OAAhE,CAAlB;AACA,QAAMC,wBAAwB,IAAIC,+BAAJ,CAA0BN,SAA1B,CAA9B;;AAFgD,gCAGlCK,sBAAsBE,eAAtB,EAHkC;AAAA,QAGzCC,GAHyC,yBAGzCA,GAHyC;;AAIhD,QAAMC,0EAAN;;AAEAX,WAAOY,KAAP,CAAaF,GAAb,EAAkBC,QAAlB;AACH,CAPD;;AASAV,QAAQ,8BAAR,IAA0C,YAAM;AAC5C,QAAMC,YAAY,IAAIC,mBAAJ,CAAc,EAAEC,MAAM,OAAR,EAAd,CAAlB;AACA,QAAMG,wBAAwB,IAAIC,+BAAJ,CAA0BN,SAA1B,CAA9B;;AAF4C,iCAG9BK,sBAAsBE,eAAtB,EAH8B;AAAA,QAGrCC,GAHqC,0BAGrCA,GAHqC;;AAI5C,QAAMC,2CAAN;;AAEAX,WAAOY,KAAP,CAAaF,GAAb,EAAkBC,QAAlB;AACH,CAPD","file":"CountStatementCreator.js","sourcesContent":["import * as assert from \"assert\";\nimport CountStatementCreator from \"../sqlite/statements/CountStatementCreator\";\nimport Queryable from \"../queryable/Queryable\";\n\n\nexports[\"CountStatementCreator: IsEqualTo\"] = () => {\n    const queryable = new Queryable({ type: \"table\" }).column(\"columnName\").isEqualTo(\"value\");\n    const countStatementCreator = new CountStatementCreator(queryable);\n    const {sql} = countStatementCreator.createStatement();\n    const expected = `SELECT count(*) FROM \"table\" WHERE \"columnName\" = 'value'`;\n\n    assert.equal(sql, expected);\n}\n\nexports[\"CountStatementCreator: Empty\"] = () => {\n    const queryable = new Queryable({ type: \"table\" });\n    const countStatementCreator = new CountStatementCreator(queryable);\n    const {sql} = countStatementCreator.createStatement();\n    const expected = `SELECT count(*) FROM \"table\"`;\n\n    assert.equal(sql, expected);\n}\n"]}