{"version":3,"sources":["../../src/tests/CountStatementCreator.js"],"names":["assert","exports","queryable","Queryable","query","type","column","isEqualTo","countStatementCreator","CountStatementCreator","createStatement","sql","expected","equal"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACA;;;;;;;;AAGAC,QAAQ,kCAAR,IAA8C,YAAM;AAChD,QAAMC,YAAY,IAAIC,mBAAJ,CAAc,EAAEC,OAAO,EAAEC,MAAM,OAAR,EAAT,EAAd,EAA4CC,MAA5C,CAAmD,YAAnD,EAAiEC,SAAjE,CAA2E,OAA3E,CAAlB;AACA,QAAMC,wBAAwB,IAAIC,+BAAJ,CAA0BP,SAA1B,CAA9B;;AAFgD,gCAGhCM,sBAAsBE,eAAtB,EAHgC;AAAA,QAGxCC,GAHwC,yBAGxCA,GAHwC;;AAIhD,QAAMC,0EAAN;;AAEAZ,WAAOa,KAAP,CAAaF,GAAb,EAAkBC,QAAlB;AACH,CAPD;;AASAX,QAAQ,8BAAR,IAA0C,YAAM;AAC5C,QAAMC,YAAY,IAAIC,mBAAJ,CAAc,EAAEC,OAAO,EAAEC,MAAM,OAAR,EAAT,EAAd,CAAlB;AACA,QAAMG,wBAAwB,IAAIC,+BAAJ,CAA0BP,SAA1B,CAA9B;;AAF4C,iCAG5BM,sBAAsBE,eAAtB,EAH4B;AAAA,QAGpCC,GAHoC,0BAGpCA,GAHoC;;AAI5C,QAAMC,2CAAN;;AAEAZ,WAAOa,KAAP,CAAaF,GAAb,EAAkBC,QAAlB;AACH,CAPD","file":"CountStatementCreator.js","sourcesContent":["import * as assert from \"assert\";\nimport CountStatementCreator from \"../sqlite/statements/CountStatementCreator\";\nimport Queryable from \"../queryable/Queryable\";\n\n\nexports[\"CountStatementCreator: IsEqualTo\"] = () => {\n    const queryable = new Queryable({ query: { type: \"table\" } }).column(\"columnName\").isEqualTo(\"value\");\n    const countStatementCreator = new CountStatementCreator(queryable);\n    const { sql } = countStatementCreator.createStatement();\n    const expected = `SELECT count(*) FROM \"table\" WHERE \"columnName\" = 'value'`;\n\n    assert.equal(sql, expected);\n}\n\nexports[\"CountStatementCreator: Empty\"] = () => {\n    const queryable = new Queryable({ query: { type: \"table\" } });\n    const countStatementCreator = new CountStatementCreator(queryable);\n    const { sql } = countStatementCreator.createStatement();\n    const expected = `SELECT count(*) FROM \"table\"`;\n\n    assert.equal(sql, expected);\n}\n"]}