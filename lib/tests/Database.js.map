{"version":3,"sources":["../../src/tests/Database.js"],"names":["assert","exports","database","sqlite","Database","sqliteDatabase","SqliteDatabase","addRepositoryAsync","personSchema","then","addressSchema","phoneNumberSchema","getRepository","name","version","addAsync","firstName","lastName","response","catch","error"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEAC,QAAQ,mCAAR,IAA+C,YAAM;;AAEjD,QAAMC,WAAW,IAAIC,iBAAOC,QAAX,CAAoB,UAApB,CAAjB;AACA,QAAMC,iBAAiB,IAAIC,kBAAJ,CAAmB,EAACJ,kBAAD,EAAnB,CAAvB;;AAEA,WAAOG,eAAeE,kBAAf,CAAkCC,gBAAlC,EAAgDC,IAAhD,CAAqD,YAAI;AAC5D,eAAQJ,eAAeE,kBAAf,CAAkCG,iBAAlC,CAAR;AACH,KAFM,EAEJD,IAFI,CAEC,YAAI;AACR,eAAOJ,eAAeE,kBAAf,CAAkCI,qBAAlC,CAAP;AACH,KAJM,CAAP;AAMH,CAXD;;AAaAV,QAAQ,6BAAR,IAAyC,YAAM;;AAE3C,QAAMC,WAAW,IAAIC,iBAAOC,QAAX,CAAoB,UAApB,CAAjB;AACA,QAAMC,iBAAiB,IAAIC,kBAAJ,CAAmB,EAACJ,kBAAD,EAAnB,CAAvB;;AAEA,WAAOG,eAAeE,kBAAf,CAAkCC,gBAAlC,EAAgDC,IAAhD,CAAqD,YAAI;AAC5D,eAAQJ,eAAeO,aAAf,CAA6BJ,iBAAaK,IAA1C,EAAgDL,iBAAaM,OAA7D,EAAsEC,QAAtE,CAA+E;AACnFC,uBAAW,MADwE;AAEnFC,sBAAU;AAFyE,SAA/E,CAAR;AAIH,KALM,EAKJR,IALI,CAKC,UAACS,QAAD,EAAY,CAEnB,CAPM,EAOJC,KAPI,CAOE,UAACC,KAAD,EAAS,CAEjB,CATM,CAAP;AAWH,CAhBD","file":"Database.js","sourcesContent":["import * as assert from \"assert\";\nimport SqliteDatabase from \"../sqlite/Database\";\nimport sqlite from \"sqlite3\";\nimport personSchema from \"../testSchemas/person\";\nimport addressSchema from \"../testSchemas/address\";\nimport phoneNumberSchema from \"../testSchemas/phoneNumber\";\n\nexports[\"SqliteDatabase: Add Repositories.\"] = () => { \n\n    const database = new sqlite.Database(\":memory:\");\n    const sqliteDatabase = new SqliteDatabase({database});\n\n    return sqliteDatabase.addRepositoryAsync(personSchema).then(()=>{\n        return  sqliteDatabase.addRepositoryAsync(addressSchema);\n    }).then(()=>{\n        return sqliteDatabase.addRepositoryAsync(phoneNumberSchema);\n    });\n\n};\n\nexports[\"SqliteDatabase: Add Person.\"] = () => { \n    \n    const database = new sqlite.Database(\":memory:\");\n    const sqliteDatabase = new SqliteDatabase({database});\n\n    return sqliteDatabase.addRepositoryAsync(personSchema).then(()=>{\n        return  sqliteDatabase.getRepository(personSchema.name, personSchema.version).addAsync({\n            firstName: \"John\",\n            lastName: \"Doe\"\n        });\n    }).then((response)=>{\n\n    }).catch((error)=>{\n\n    });\n\n};\n\n"]}