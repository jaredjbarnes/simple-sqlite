{"version":3,"sources":["../../../src/sqlite/utils/invokeMethodAsync.js"],"names":["obj","methodName","args","fallbackResult","Array","isArray","result","apply","error","Promise","reject","resolve"],"mappings":";;;;;;kBAAe,UAACA,GAAD,EAAMC,UAAN,EAAkBC,IAAlB,EAAwBC,cAAxB,EAA2C;AACtD,QAAI,CAACC,MAAMC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACtBA,eAAO,EAAP;AACH;;AAED,QAAIF,OAAO,IAAP,IAAe,OAAOA,IAAIC,UAAJ,CAAP,KAA2B,UAA9C,EAA0D;AACtD,YAAIK,eAAJ;;AAEA,YAAI;AACAA,qBAASN,IAAIC,UAAJ,EAAgBM,KAAhB,CAAsBP,GAAtB,EAA2BE,IAA3B,CAAT;AACH,SAFD,CAEE,OAAOM,KAAP,EAAc;AACZ,mBAAOC,QAAQC,MAAR,CAAeF,KAAf,CAAP;AACH;;AAED,YAAI,EAAEF,kBAAkBG,OAApB,CAAJ,EAAkC;AAC9B,mBAAOA,QAAQE,OAAR,CAAgBL,MAAhB,CAAP;AACH;;AAED,eAAOA,MAAP;AACH;AACD,WAAOG,QAAQE,OAAR,CAAgBR,cAAhB,CAAP;AACH,C","file":"invokeMethodAsync.js","sourcesContent":["export default (obj, methodName, args, fallbackResult) => {\n    if (!Array.isArray(args)) {\n        args = [];\n    }\n\n    if (obj != null && typeof obj[methodName] === \"function\") {\n        let result;\n\n        try {\n            result = obj[methodName].apply(obj, args);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n\n        if (!(result instanceof Promise)) {\n            return Promise.resolve(result);\n        }\n\n        return result;\n    }\n    return Promise.resolve(fallbackResult);\n};"]}