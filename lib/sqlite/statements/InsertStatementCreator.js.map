{"version":3,"sources":["../../../src/sqlite/statements/InsertStatementCreator.js"],"names":["InsertStatementCreator","constructor","entity","tableName","primaryKeys","createStatement","options","insertStatementCreator","keys","Object","values","map","key","escapedKeys","SqliteUtils","escapeName","placeHolderArray","Array","length","fill","join","sql"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,sBAAN,CAA6B;AACxCC,EAAAA,WAAW,CAAC;AACRC,IAAAA,MADQ;AAERC,IAAAA,SAFQ;AAGRC,IAAAA;AAHQ,GAAD,EAIR;AACC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AAED,SAAOC,eAAP,CAAuBC,OAAvB,EAA+B;AAC3B,UAAMC,sBAAsB,GAAG,IAAIP,sBAAJ,CAA2BM,OAA3B,CAA/B;AACA,WAAOC,sBAAsB,CAACF,eAAvB,EAAP;AACH;;AAEDA,EAAAA,eAAe,GAAG;AACd,UAAMH,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMM,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,MAAZ,CAAb;AACA,UAAMQ,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AAC7B,aAAOV,MAAM,CAACU,GAAD,CAAb;AACH,KAFc,CAAf;AAGA,UAAMC,WAAW,GAAGL,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AAClC,aAAOE,qBAAYC,UAAZ,CAAuBH,GAAvB,CAAP;AACH,KAFmB,CAApB;AAIA,UAAMI,gBAAgB,GAAG,IAAIC,KAAJ,CAAUT,IAAI,CAACU,MAAf,EAAuBC,IAAvB,CAA4B,GAA5B,EAAiCC,IAAjC,CAAsC,IAAtC,CAAzB;AAEA,WAAO;AACHC,MAAAA,GAAG,EAAG,eAAcP,qBAAYC,UAAZ,CAAuB,KAAKZ,SAA5B,CAAuC,MAAKU,WAAW,CAACO,IAAZ,CAAiB,IAAjB,CAAuB,eAAcJ,gBAAiB,IADnH;AAEHN,MAAAA,MAAM,EAAEA;AAFL,KAAP;AAKH;;AAjCuC","sourcesContent":["import SqliteUtils from \"../utils/SqliteUtils\";\n\nexport default class InsertStatementCreator {\n    constructor({\n        entity,\n        tableName,\n        primaryKeys\n    }) {\n        this.entity = entity;\n        this.tableName = tableName;\n        this.primaryKeys = primaryKeys;\n    }\n\n    static createStatement(options){\n        const insertStatementCreator = new InsertStatementCreator(options);\n        return insertStatementCreator.createStatement(); \n    }\n\n    createStatement() {\n        const entity = this.entity;\n        const keys = Object.keys(entity);\n        const values = keys.map((key) => {\n            return entity[key];\n        });\n        const escapedKeys = keys.map((key) => {\n            return SqliteUtils.escapeName(key);\n        });\n\n        const placeHolderArray = new Array(keys.length).fill(\"?\").join(\", \");\n\n        return {\n            sql: `INSERT INTO ${SqliteUtils.escapeName(this.tableName)} ( ${escapedKeys.join(\", \")} ) VALUES ( ${placeHolderArray} )`,\n            values: values\n        }\n\n    }\n}"],"file":"InsertStatementCreator.js"}