{"version":3,"sources":["../../../src/sqlite/statements/UpdateWhereStatementCreator.js"],"names":["UpdateWhereStatementCreator","queryable","Error","SqliteUtils","escapeName","type","visitor","SqlVisitor","createWhereExpression","query","expression","updates","keys","Object","statement","reduce","accumulator","key","placeHolderValues","push","values","sql","getTableName","join","updateStatement","createSetExpression","whereStatement"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,2B;AACjB,yCAAYC,SAAZ,EAAuB;AAAA;;AAEnB,YAAIA,aAAa,IAAjB,EAAuB;AACnB,kBAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;AACH;;AAED,aAAKD,SAAL,GAAiBA,SAAjB;AACH;;;;uCAEa;AACV,mBAAOE,sBAAYC,UAAZ,CAAuB,KAAKH,SAAL,CAAeI,IAAtC,CAAP;AACH;;;gDAEuB;AACpB,gBAAMC,UAAU,IAAIC,oBAAJ,EAAhB;AACA,mBAAOD,QAAQE,qBAAR,CAA8B,KAAKP,SAAL,CAAeQ,KAAf,CAAqBC,UAAnD,CAAP;AACH;;;4CAEmBC,O,EAAS;AACzB,gBAAMC,OAAOC,OAAOD,IAAP,CAAYD,OAAZ,CAAb;;AAEA,gBAAMG,YAAYF,KAAKG,MAAL,CAAY,UAACC,WAAD,EAAcC,GAAd,EAAsB;AAChD,oBAAIA,QAAQ,IAAZ,EAAkB;AACd,2BAAOD,WAAP;AACH;;AAEDA,4BAAYE,iBAAZ,CAA8BC,IAA9B,CAAsChB,sBAAYC,UAAZ,CAAuBa,GAAvB,CAAtC;AACAD,4BAAYI,MAAZ,CAAmBD,IAAnB,CAAwBR,QAAQM,GAAR,CAAxB;AACA,uBAAOD,WAAP;AACH,aARiB,EAQf,EAAEE,mBAAmB,EAArB,EAAyBE,QAAQ,EAAjC,EARe,CAAlB;;AAUA,mBAAO;AACHC,iCAAe,KAAKC,YAAL,EAAf,aAA0CR,UAAUI,iBAAV,CAA4BK,IAA5B,CAAiC,IAAjC,CADvC;AAEHH,wBAAQN,UAAUM;AAFf,aAAP;AAKH;;;wCAEeT,O,EAAS;AACrB,gBAAMa,kBAAkB,KAAKC,mBAAL,CAAyBd,OAAzB,CAAxB;AACA,gBAAMe,iBAAiB,KAAKlB,qBAAL,EAAvB;;AAEA,gBAAIa,MAAMG,gBAAgBH,GAA1B;;AAEA,gBAAIK,kBAAkB,EAAtB,EAA0B;AACtBL,sBAASA,GAAT,SAAgBK,cAAhB;AACH;;AAED,mBAAO;AACHL,wBADG;AAEHD,wBAAQI,gBAAgBJ;AAFrB,aAAP;AAIH;;;;;;kBArDgBpB,2B","file":"UpdateWhereStatementCreator.js","sourcesContent":["import SqlVisitor from \"../visitors/SqlVisitor\";\nimport SqliteUtils from \"../utils/SqliteUtils\";\n\nexport default class UpdateWhereStatementCreator {\n    constructor(queryable) {\n\n        if (queryable == null) {\n            throw new Error(\"Null Exception: A queryable is needed to create statement.\");\n        }\n\n        this.queryable = queryable;\n    }\n\n    getTableName(){\n        return SqliteUtils.escapeName(this.queryable.type);\n    }\n\n    createWhereExpression() {\n        const visitor = new SqlVisitor();\n        return visitor.createWhereExpression(this.queryable.query.expression);\n    }\n\n    createSetExpression(updates) {\n        const keys = Object.keys(updates);\n\n        const statement = keys.reduce((accumulator, key) => {\n            if (key === \"id\") {\n                return accumulator;\n            }\n\n            accumulator.placeHolderValues.push(`${SqliteUtils.escapeName(key)} = ?`);\n            accumulator.values.push(updates[key]);\n            return accumulator;\n        }, { placeHolderValues: [], values: [] });\n\n        return {\n            sql: `UPDATE ${this.getTableName()} SET ${statement.placeHolderValues.join(\", \")}`,\n            values: statement.values\n        }\n\n    }\n\n    createStatement(updates) {\n        const updateStatement = this.createSetExpression(updates);\n        const whereStatement = this.createWhereExpression();\n\n        let sql = updateStatement.sql;\n\n        if (whereStatement != \"\") {\n            sql = `${sql} ${whereStatement}`;\n        }\n\n        return {\n            sql,\n            values: updateStatement.values\n        }\n    }\n}"]}