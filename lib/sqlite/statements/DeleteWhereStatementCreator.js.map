{"version":3,"sources":["../../../src/sqlite/statements/DeleteWhereStatementCreator.js"],"names":["DeleteWhereStatementCreator","queryable","Error","SqliteUtils","escapeName","query","type","getTableName","visitor","SqlVisitor","createWhereExpression","expression","deleteSql","createDeleteSql","whereSql","createWhereSql","sql","values","deleteWhereStatementCreator","createStatement"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,2B;AACjB,yCAAYC,SAAZ,EAAuB;AAAA;;AAEnB,YAAIA,aAAa,IAAjB,EAAuB;AACnB,kBAAM,IAAIC,KAAJ,CAAU,4DAAV,CAAN;AACH;;AAED,aAAKD,SAAL,GAAiBA,SAAjB;AACH;;;;uCAOa;AACV,mBAAOE,sBAAYC,UAAZ,CAAuB,KAAKH,SAAL,CAAeI,KAAf,CAAqBC,IAA5C,CAAP;AACH;;;0CAEiB;AACd,oCAAsB,KAAKC,YAAL,EAAtB;AACH;;;yCAEgB;AACb,gBAAMC,UAAU,IAAIC,oBAAJ,EAAhB;AACA,mBAAOD,QAAQE,qBAAR,CAA8B,KAAKT,SAAL,CAAeI,KAAf,CAAqBM,UAAnD,CAAP;AACH;;;0CAEiB;AACd,gBAAMC,YAAY,KAAKC,eAAL,EAAlB;AACA,gBAAMC,WAAW,KAAKC,cAAL,EAAjB;;AAEA,gBAAIC,MAAMJ,SAAV;;AAEA,gBAAIE,YAAY,EAAhB,EAAoB;AAChBE,sBAASA,GAAT,SAAgBF,QAAhB;AACH;;AAED,mBAAO;AACHE,wBADG;AAEHC,wBAAQ;AAFL,aAAP;AAIH;;;wCAhCsBhB,S,EAAU;AAC7B,gBAAMiB,8BAA8B,IAAIlB,2BAAJ,CAAgCC,SAAhC,CAApC;AACA,mBAAOiB,4BAA4BC,eAA5B,EAAP;AACH;;;;;;kBAbgBnB,2B","file":"DeleteWhereStatementCreator.js","sourcesContent":["import SqlVisitor from \"../visitors/SqlVisitor\";\nimport SqliteUtils from \"../utils/SqliteUtils\";\n\nexport default class DeleteWhereStatementCreator {\n    constructor(queryable) {\n\n        if (queryable == null) {\n            throw new Error(\"Null Exception: A queryable is needed to create statement.\");\n        }\n\n        this.queryable = queryable;\n    }\n\n    static createStatement(queryable){\n        const deleteWhereStatementCreator = new DeleteWhereStatementCreator(queryable);\n        return deleteWhereStatementCreator.createStatement();\n    }\n\n    getTableName(){\n        return SqliteUtils.escapeName(this.queryable.query.type);\n    }\n\n    createDeleteSql() {\n        return `DELETE FROM ${this.getTableName()}`;\n    }\n\n    createWhereSql() {\n        const visitor = new SqlVisitor();\n        return visitor.createWhereExpression(this.queryable.query.expression);\n    }\n\n    createStatement() {\n        const deleteSql = this.createDeleteSql();\n        const whereSql = this.createWhereSql();\n\n        let sql = deleteSql;\n\n        if (whereSql != \"\") {\n            sql = `${sql} ${whereSql}`;\n        }\n\n        return {\n            sql,\n            values: []\n        }\n    }\n\n}"]}