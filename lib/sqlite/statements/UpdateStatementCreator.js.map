{"version":3,"sources":["../../../src/sqlite/statements/UpdateStatementCreator.js"],"names":["UpdateStatementCreator","entity","validateEntityPrimaryKeys","Error","whereStatement","createWhereExpression","sql","SqliteUtils","escapeName","tableName","values","AbstractStatementCreator"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,sB;;;;;;;;;;;0CAEC;AACd,gBAAMC,SAAS,KAAKA,MAApB;;AAEA,gBAAI,CAAC,KAAKC,yBAAL,CAA+BD,MAA/B,CAAL,EAA6C;AACzC,sBAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAED,gBAAMC,iBAAiB,KAAKC,qBAAL,EAAvB;;AAEA,mBAAO;AACHC,sCAAoBC,sBAAYC,UAAZ,CAAuB,KAAKC,SAA5B,CAApB,SAA8DL,cAD3D;AAEHM,wBAAQ;AAFL,aAAP;AAIH;;;;EAf+CC,kC;;kBAA/BX,sB","file":"UpdateStatementCreator.js","sourcesContent":["import SqliteUtils from \"../utils/SqliteUtils\";\nimport AbstractStatementCreator from \"./AbstractStatementCreator\";\n\nexport default class UpdateStatementCreator extends AbstractStatementCreator {\n\n    createStatement() {\n        const entity = this.entity;\n\n        if (!this.validateEntityPrimaryKeys(entity)) {\n            throw new Error(\"Cannot delete entity: Invalid primary key(s).\");\n        }\n\n        const whereStatement = this.createWhereExpression();\n\n        return {\n            sql: `DELETE FROM ${SqliteUtils.escapeName(this.tableName)} ${whereStatement}`,\n            values: []\n        }\n    }\n}"]}