{"version":3,"sources":["../../src/sqlite/Repository.js"],"names":["Repository","database","name","primaryKeys","sqliteDatabaseWrapper","Sqlite3Wrapper","entity","InsertStatementCreator","createStatement","tableName","sql","values","runAsync","DeleteStatementCreator","UpdateStatementCreator","Provider","provider","getQueryProvider","Queryable","type"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,U;AACjB,8BAAsD;AAAA,YAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,YAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,oCAAxBC,WAAwB;AAAA,YAAxBA,WAAwB,oCAAV,CAAC,IAAD,CAAU;;AAAA;;AAClD,aAAKD,IAAL,GAAYA,IAAZ;AACA,aAAKD,QAAL,GAAgBA,QAAhB;AACA,aAAKG,qBAAL,GAA6B,IAAIC,wBAAJ,CAAmB,KAAKJ,QAAxB,CAA7B;AACA,aAAKE,WAAL,GAAmBA,WAAnB;AACH;;;;iCAEQG,M,EAAQ;AAAA,wCACWC,iCAAuBC,eAAvB,CAAuC;AAC3DC,2BAAW,KAAKP,IAD2C;AAE3DI,8BAF2D;AAG3DH,6BAAa,KAAKA;AAHyC,aAAvC,CADX;AAAA,gBACLO,GADK,yBACLA,GADK;AAAA,gBACAC,MADA,yBACAA,MADA;;AAOb,mBAAO,KAAKP,qBAAL,CAA2BQ,QAA3B,CAAoCF,GAApC,EAAyCC,MAAzC,CAAP;AACH;;;oCAEWL,M,EAAQ;AAAA,wCACQO,iCAAuBL,eAAvB,CAAuC;AAC3DC,2BAAW,KAAKP,IAD2C;AAE3DI,8BAF2D;AAG3DH,6BAAa,KAAKA;AAHyC,aAAvC,CADR;AAAA,gBACRO,GADQ,yBACRA,GADQ;AAAA,gBACHC,MADG,yBACHA,MADG;;AAOhB,mBAAO,KAAKP,qBAAL,CAA2BQ,QAA3B,CAAoCF,GAApC,EAAyCC,MAAzC,CAAP;AACH;;;oCAEWL,M,EAAQ;AAAA,wCAEMQ,iCAAuBN,eAAvB,CAAuC;AACzDC,2BAAW,KAAKP,IADyC;AAEzDI,8BAFyD;AAGzDH,6BAAa,KAAKA;AAHuC,aAAvC,CAFN;AAAA,gBAETO,GAFS,yBAETA,GAFS;AAAA,gBAEJC,MAFI,yBAEJA,MAFI;;AAQhB,mBAAO,KAAKP,qBAAL,CAA2BQ,QAA3B,CAAoCF,GAApC,EAAyCC,MAAzC,CAAP;AAEH;;;2CAEkB;AACf,mBAAO,IAAII,kBAAJ,CAAa;AAChBd,0BAAU,KAAKA;AADC,aAAb,CAAP;AAGH;;;gCAEO;AACJ,gBAAMe,WAAW,KAAKC,gBAAL,EAAjB;;AAEA,mBAAO,IAAIC,mBAAJ,CAAc;AACjBC,sBAAM,KAAKjB,IADM;AAEjBc,0BAAUA;AAFO,aAAd,CAAP;AAIH;;;;;;kBArDgBhB,U","file":"Repository.js","sourcesContent":["import Provider from \"./Provider\";\nimport Queryable from \"../queryable/Queryable\";\nimport Sqlite3Wrapper from \"./Sqlite3Wrapper\";\nimport InsertStatementCreator from \"./statements/InsertStatementCreator\";\nimport UpdateStatementCreator from \"./statements/UpdateStatementCreator\";\nimport DeleteStatementCreator from \"./statements/DeleteStatementCreator\";\n\nexport default class Repository {\n    constructor({ database, name, primaryKeys = [\"id\"] }) {\n        this.name = name;\n        this.database = database;\n        this.sqliteDatabaseWrapper = new Sqlite3Wrapper(this.database);\n        this.primaryKeys = primaryKeys;\n    }\n\n    addAsync(entity) {\n        const { sql, values } = InsertStatementCreator.createStatement({\n            tableName: this.name,\n            entity,\n            primaryKeys: this.primaryKeys\n        });\n\n        return this.sqliteDatabaseWrapper.runAsync(sql, values);\n    }\n\n    removeAsync(entity) {\n        const { sql, values } = DeleteStatementCreator.createStatement({\n            tableName: this.name,\n            entity,\n            primaryKeys: this.primaryKeys\n        });\n\n        return this.sqliteDatabaseWrapper.runAsync(sql, values);\n    }\n\n    updateAsync(entity) {\n        \n        const {sql, values} = UpdateStatementCreator.createStatement({\n            tableName: this.name,\n            entity,\n            primaryKeys: this.primaryKeys\n        });\n\n        return this.sqliteDatabaseWrapper.runAsync(sql, values);\n\n    }\n\n    getQueryProvider() {\n        return new Provider({\n            database: this.database\n        });\n    }\n\n    where() {\n        const provider = this.getQueryProvider();\n\n        return new Queryable({\n            type: this.name,\n            provider: provider\n        });\n    }\n\n}"]}